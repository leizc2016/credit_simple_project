<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
	default-lazy-init="true">

	<description>Spring公共配置 </description>

	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.pactera.pds.u2.commerce">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>

	<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
		<property name="dataSource" ref="dataSource"/>
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
		<property name="packagesToScan" value="com.pactera.pds.u2.commerce"/>
		<property name="jpaProperties">
			<props>
				<!-- 命名规则 My_NAME->MyName, 暂时关闭二级缓存 -->
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="net.sf.ehcache.configurationResourceName">cache/ehcache-hibernate-local.xml</prop>
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<!-- 
					<prop key="hibernate.hbm2ddl.auto">create</prop>
				 -->
			</props>
		</property>
	</bean>
	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform">
			<bean factory-method="getDialect" class="org.springside.modules.persistence.Hibernates">
				<constructor-arg ref="dataSource"/>
			</bean>
		</property>
	</bean>

	<!-- Spring Data Jpa配置
        base-package:扫描的包，所有继承MyRepository的接口所在的包需要在这里定义
        repository-impl-postfix:仓库自定义实现类型的后缀  自动扫描并添加到接口的实现
        factory-class 仓库接口的实现工厂
	 -->
 	<jpa:repositories base-package="com.pactera.pds.u2.commerce"  
 		transaction-manager-ref="transactionManager" 
 		factory-class="com.pactera.pds.u2.commerce.repository.jpa.base.GlobalRepositoryFactoryBean" 
 		entity-manager-factory-ref="entityManagerFactory"
 		/>
 		
   <!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置-->
		<property name="configLocation" value="classpath:/mybatis/mybatis-config.xml"></property>
		<property name="typeAliasesPackage" value="com.pactera.pds.u2.commerce" />
		
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath:/mybatis/*Mapper.xml" />
		<!-- 
		<property name="plugins">
		    <array>
		      <bean class="com.github.miemiedev.mybatis.paginator.OffsetLimitInterceptor">
		        <property name="properties">
		          <value>
		            dialectClass=com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect
		          </value>
		        </property>
		      </bean>
		    </array>
		  </property>
		 -->
	</bean>
	<bean id="sqlSessionFactory_bctmp" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource_bctmp" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置-->
		<property name="configLocation" value="classpath:/mybatis/mybatis-config.xml"></property>
		<property name="typeAliasesPackage" value="com.pactera.pds.u2.commerce" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath:/mybatis/tempdb/*Mapper.xml" />
	</bean>	
	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.pactera.pds.u2.commerce" />
		<property name="annotationClass" value="com.pactera.pds.u2.commerce.repository.mybatis.MyBatisRepository"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.pactera.pds.u2.commerce" />
		<property name="annotationClass" value="com.pactera.pds.u2.commerce.repository.mybatis.MyBatisTempDataRepository"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory_bctmp"></property>
	</bean>		
	<!-- Jpa 事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	<!-- 临时库直接使用jdbc事务 -->
	<bean id="bctmpTxManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	    <property name="dataSource" ref="dataSource_bctmp"/>
	</bean>
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

	<!-- JSR303 Validator定义 -->
 	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
	
	<!-- production环境 -->
 	<beans profile="production">
 		<context:property-placeholder ignore-unresolvable="true"
			location="classpath*:/application.properties" />	
		
		<!-- 数据源配置, 使用Tomcat JDBC连接池 -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password">
				<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	    			<property name="staticMethod" value="com.pactera.pds.u2.commerce.utils.DESUtil.decrypt" />
		    		<property name="arguments">
	        		<list>
						<value>${jdbc.password}</value>
		    		</list>
					</property>
				</bean>
			</property>
			
			<!-- Connection Pooling Info -->
			<property name="maxActive" value="${jdbc.pool.maxActive}" />
			<property name="maxIdle" value="${jdbc.pool.maxIdle}" />
			<property name="minIdle" value="0" />
			<property name="defaultAutoCommit" value="false" />
		</bean>
		<bean id="dataSource_bctmp" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${bctmp.jdbc.url}" />
			<property name="username" value="${bctmp.jdbc.username}" />
			<property name="password">
				<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	    			<property name="staticMethod" value="com.pactera.pds.u2.commerce.utils.DESUtil.decrypt" />
		    		<property name="arguments">
	        		<list>
						<value>${bctmp.jdbc.password}</value>
		    		</list>
					</property>
				</bean>
			</property>
		
			<!-- Connection Pooling Info -->
			<property name="maxActive" value="${jdbc.pool.maxActive}" />
			<property name="maxIdle" value="${jdbc.pool.maxIdle}" />
			<property name="minIdle" value="0" />
			<property name="defaultAutoCommit" value="false" />
		</bean>		
		<!-- 数据源配置,使用应用服务器的数据库连接池 -->
		<!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/ExampleDB" />-->
	</beans>
	
	<!-- local development环境 -->
	<beans profile="development">
		<context:property-placeholder ignore-resource-not-found="true"
			location="classpath*:/application.properties,
          			  classpath*:/application.development.properties" />	

		<!-- Tomcat JDBC连接池 -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="defaultAutoCommit" value="false" />
		</bean>
		<bean id="dataSource_bctmp" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${bctmp.jdbc.url}" />
			<property name="username" value="${bctmp.jdbc.username}" />
			<property name="password" value="${bctmp.jdbc.password}" />
			<property name="defaultAutoCommit" value="false" />
		</bean>			
	</beans>
	
	<!-- unit test环境 -->
	<beans profile="test">
	 	<context:property-placeholder ignore-resource-not-found="true"
			location="classpath*:/application.properties,
          			  classpath*:/application.test.properties" />	
		
		<!-- Spring Simple连接池 -->
		<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
			<property name="driverClass" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
		</bean>
		<bean id="dataSource_bctmp" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
			<property name="driverClass" value="${jdbc.driver}" />
			<property name="url" value="${bctmp.jdbc.url}" />
			<property name="username" value="${bctmp.jdbc.username}" />
			<property name="password" value="${bctmp.jdbc.password}" />
		</bean>
		<!-- 初始化数据表结构 与默认数据-->
		<jdbc:initialize-database data-source="dataSource" ignore-failures="ALL">
			<jdbc:script location="classpath:sql/h2/schema.sql" />
			<jdbc:script location="classpath:data/h2/import-data.sql" encoding="UTF-8"/>
		</jdbc:initialize-database>
	</beans>
</beans>